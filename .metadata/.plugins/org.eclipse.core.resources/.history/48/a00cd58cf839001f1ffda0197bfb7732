package com.wipro.reactivespringdemo.dao;

import java.time.Duration;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;

import org.springframework.stereotype.Component;

import com.wipro.reactivespringdemo.entity.Cust;
import com.wipro.reactivespringdemo.entity.Customer;

import reactor.core.publisher.Flux;

@Component
public class CustomerDao {
	
	private static void sleepmethod(int i) {
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
		
			e.printStackTrace();
		}
	}
	
	public List<Cust> getCustomers(){
		return IntStream.rangeClosed(1, 10)
				.peek(CustomerDao::sleepmethod)
				.peek(i -> System.out.println("List count " + i))
				.mapToObj(i -> new Cust(i, "NewCustomer"+i))
				.collect(Collectors.toList());
	}
	
	public Flux<Cust> getCustomersStream(){
		return Flux.range(1, 10)
				.delayElements(Duration.ofSeconds(1))
				.doOnNext(i -> System.out.println("Flux count  " + i))
				.map(i -> new Cust(i, "FluxCustomer"+i));
	}
	
	
}
